{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zadi6\\\\Desktop\\\\emarket\\\\src\\\\FormSignup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = values => console.log(values);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      ...register(\"email\", {\n        required: \"Required\",\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n          message: \"invalid email address\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), errors.email && errors.email.message, /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\", {\n        validate: value => value !== \"admin\" || \"Nice try!\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), errors.username && errors.username.message, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Example, \"yZDcMcjAYv3d6gdqrC0zHPC8AO0=\", false, function () {\n  return [useForm];\n});\n\n_c = Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["C:/Users/zadi6/Desktop/emarket/src/FormSignup.js"],"names":["React","useForm","Example","handleSubmit","register","errors","onSubmit","values","console","log","required","pattern","value","message","email","validate","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCJ,OAAO,EAAlD;;AACA,QAAMK,QAAQ,GAAIC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAA7B;;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,OADP;AAAA,SAEMF,QAAQ,CAAC,OAAD,EAAU;AACpBM,QAAAA,QAAQ,EAAE,UADU;AAEpBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE,0CADA;AAEPC,UAAAA,OAAO,EAAE;AAFF;AAFW,OAAV;AAFd;AAAA;AAAA;AAAA;AAAA,YADF,EAWGR,MAAM,CAACS,KAAP,IAAgBT,MAAM,CAACS,KAAP,CAAaD,OAXhC,eAaE,sBACMT,QAAQ,CAAC,UAAD,EAAa;AACvBW,QAAAA,QAAQ,EAAGH,KAAD,IAAWA,KAAK,KAAK,OAAV,IAAqB;AADnB,OAAb;AADd;AAAA;AAAA;AAAA;AAAA,YAbF,EAkBGP,MAAM,CAACW,QAAP,IAAmBX,MAAM,CAACW,QAAP,CAAgBH,OAlBtC,eAoBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA5BD;;GAAMX,O;UACuCD,O;;;KADvCC,O","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Example = () => {\r\n  const { handleSubmit, register, errors } = useForm();\r\n  const onSubmit = (values) => console.log(values);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        type=\"email\"\r\n        {...register(\"email\", {\r\n          required: \"Required\",\r\n          pattern: {\r\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n            message: \"invalid email address\",\r\n          },\r\n        })}\r\n      />\r\n      {errors.email && errors.email.message}\r\n\r\n      <input\r\n        {...register(\"username\", {\r\n          validate: (value) => value !== \"admin\" || \"Nice try!\",\r\n        })}\r\n      />\r\n      {errors.username && errors.username.message}\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}